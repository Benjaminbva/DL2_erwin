Traceback (most recent call last):
  File "/home/aema/Desktop/erwin-main/./experiments/train_cosmology.py", line 156, in <module>
    fit(config, model, optimizer, scheduler, train_loader, valid_loader, test_loader, 100, 200)
  File "/home/aema/Desktop/erwin-main/training.py", line 127, in fit
    stat_dict = train_step(model, batch, optimizer, scheduler)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/training.py", line 59, in train_step
    stat_dict = model.training_step(batch)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/experiments/wrappers/cosmology.py", line 35, in training_step
    return self.step(batch, "train")
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/experiments/wrappers/cosmology.py", line 30, in step
    pred = self(batch["pos"], **batch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/experiments/wrappers/cosmology.py", line 27, in forward
    return self.pred_head(self.main_model(node_features, node_positions, **kwargs))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/models/erwin.py", line 393, in forward
    node = layer(node)
           ^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/models/erwin.py", line 255, in forward
    node.x = blk(node.x, node.pos)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/models/erwin.py", line 211, in forward
    x = x + self.BMSA(self.norm1(x), pos)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/erwin/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/aema/Desktop/erwin-main/models/erwin.py", line 196, in forward
    x = F.scaled_dot_product_attention(q, k, v, attn_mask=self.create_attention_mask(pos))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 256.00 MiB. GPU 0 has a total capacity of 7.62 GiB of which 200.25 MiB is free. Including non-PyTorch memory, this process has 7.41 GiB memory in use. Of the allocated memory 6.99 GiB is allocated by PyTorch, and 272.32 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
